<EditForm Model="Actor" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="mb-3">
        <label>Name</label>
        <div>
            <InputText class="form-control" @bind-Value="@Actor.Name"></InputText>
            <ValidationMessage For="@(() => Actor.Name)"></ValidationMessage>
        </div>
    </div>
    <div class="mb-3">
        <label>Datebirth</label>
        <div>
            <InputDate class="form-control" @bind-Value="@Actor.DateBirth"></InputDate>
            <ValidationMessage For="@(() => Actor.DateBirth)"></ValidationMessage>
        </div>
    </div>
    <div class="mb-3">
        <InputImage Label="Photo" ImageSelected="ImgSelected" ImageURL="imgURL"></InputImage>
    </div>
    <div class="mb-3 form-markdown">
        <InputMarkdown @bind-Value="@Actor.Biography" For="@(() => Actor.Biography)" Label="Biography">
        </InputMarkdown>
    </div>

    <button class="btn btn-success">Save</button>
</EditForm>
 
@code {
    [Parameter]
    [EditorRequired]
    public Actor Actor { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public EventCallback OnValidSubmit { get; set; }

    string? imgURL;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Actor.Photo))
        {
            imgURL = Actor.Photo;
            Actor.Photo = null;
        }
    }

    private void ImgSelected(string imgBase64)
    {
        Actor.Photo = imgBase64;
        imgURL = null;
    }
}
