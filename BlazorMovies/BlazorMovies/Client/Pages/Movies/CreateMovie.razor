@page "/movies/create"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService swal

<h3>Create Movie</h3>

<FormMovie Movie="Movie" OnValidSubmit="Create" GendersNoSelecteds="GendersNoSelected"></FormMovie>

@code {
    private Movie Movie = new Movie();
    private List<Gender> GendersNoSelected = new List<Gender>();

    protected override void OnInitialized()
    {
        GendersNoSelected = new List<Gender>()
        {
            new Gender(){Id = 1, Name = "Fiction"},
            new Gender(){Id = 2, Name = "Action"},
            new Gender(){Id = 3, Name = "Comedy"}
        };
    }

    async Task Create()
    {
        // Console.WriteLine(navigationManager.BaseUri);
        // Console.WriteLine(navigationManager.Uri);
        // navigationManager.NavigateTo("movie");
        var httpResponse = await repository.PostAsync<Movie, int>("api/movies", Movie);

        if (httpResponse.Error)
        {
            var errormessage = await httpResponse.GetMessageError();
            await swal.FireAsync("Error", errormessage, SweetAlertIcon.Error);
        }
        else
        {
            var movieId = httpResponse.Response;
            navigationManager.NavigateTo($"/movie/{movieId}/{Movie.Title.Replace(" ", "-")}");
        }
    }
}
