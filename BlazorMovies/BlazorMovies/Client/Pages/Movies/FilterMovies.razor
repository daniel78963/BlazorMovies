@page "/movies/search"
@inject IRepository repository

<h3>Filter Movies</h3>

<div class="row g-3 align-items-center mb-3">
    @* g-3 espacio entre columnas mb-3 margen inferior *@
    <div class="col-sm-3">
        <input type="text" class="form-control" id="title" placeholder="movie title"
               @bind-value="title" @bind-value:event="oninput" onkeypress="@((KeyboardEventArgs e)=> TitleKeyPress(e))" />
    </div>
    <div class="col-sm-3">
        <select class="form-select" @bind="genderSelected">
            <option value="0">-- select gender ---</option>
            @foreach (var item in genders)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
    </div>

    <div class="col-sm-6" style="display: flex;">
        <div class="form-check me-2">
            <input type="checkbox" class="form-check-input" id="premieres" @bind="futurePremieres" />
            <label class="form-check-label" for="premieres">Future premieres</label>
        </div>
        <div class="form-check me-2">
            <input type="checkbox" class="form-check-input" id="billboard" @bind="onBillboard" />
            <label class="form-check-label" for="premieres">On billboard</label>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="billboard" @bind="moreVoted" />
            <label class="form-check-label" for="moreVoted">More Voted</label>
        </div>
    </div>

    <div class="col-12">
        <button type="button" class="btn btn-primary" @onclick="LoadNewMovies">Filter</button>
        <button type="button" class="btn btn-danger" @onclick="CleanOnClick">Clean</button>
    </div>
</div>

<MoviesList Movies="Movies"></MoviesList>

@code {
    private string title = "";
    private string genderSelected = "0";
    private List<Gender> genders = new List<Gender>();
    private bool futurePremieres = false;
    private bool onBillboard = false;
    private bool moreVoted = false;
    private List<Movie> Movies;

    protected override void OnInitialized()
    {
        Movies = repository.GetMovies();
    }

    private void TitleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            LoadNewMovies();
        }
    }

    private void LoadNewMovies()
    {
        Movies = repository.GetMovies().Where(x => x.Title.ToLower().Contains(title.ToLower())).ToList();

        Console.WriteLine($"title: {title}");
        Console.WriteLine($"gender selected: {genderSelected}");
        Console.WriteLine($"onBillboard: {onBillboard}");
        Console.WriteLine($"futurePremiere: {futurePremieres}");
        Console.WriteLine($"moreVoted: {moreVoted}");
    }

    private void CleanOnClick()
    {
        Movies = repository.GetMovies();
        title = "";
        genderSelected = "0";
        futurePremieres = false;
        onBillboard = false;
        moreVoted = false;
    }
}
