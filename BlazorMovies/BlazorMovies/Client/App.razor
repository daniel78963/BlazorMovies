@using Microsoft.AspNetCore.Components.WebAssembly.Services;
@using System.Reflection;
@inject LazyAssemblyLoader lazyLoader

<Router AppAssembly="@typeof(App).Assembly"
        OnNavigateAsync="OnNavigateAsync"
        AdditionalAssemblies="assemblies">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            @*  <p role="alert">Sorry, there's nothing at this address.</p> *@
            <CustomNotFound></CustomNotFound>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private List<Assembly> assemblies = new List<Assembly>();

    private async Task OnNavigateAsync(NavigationContext args)
    {
        if (args.Path.EndsWith("counter"))
        {
            var assembliesLoaded = await lazyLoader.LoadAssembliesAsync(
                new List<string> { "MathNet.Numerics.dll" });

            //Con esto se lo pasamos al ruteador
            assemblies.AddRange(assembliesLoaded);
        }
    }
}